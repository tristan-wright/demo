#include "server.h"

int start_server(void* (*handle_connection)(void*), Client* data) {
    struct addrinfo* ai = 0;
    struct addrinfo SA;
    struct sockaddr_in my_addr, client_addr;

    int server_socket, client_socket;

    memset(&SA, 0, sizeof(struct addrinfo));
    SA.ai_family=AF_INET;
    SA.ai_socktype=SOCK_STREAM;
    SA.ai_flags=AI_PASSIVE;
    int err;
    if (err=getaddrinfo("localhost", "9000", &SA, &ai)) {
        return 1;
    }

    server_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (bind(server_socket, (struct sockaddr*)ai->ai_addr, sizeof(struct sockaddr))) {
        return 3;
    }

    memset(&my_addr, 0, sizeof(struct sockaddr_in));
    socklen_t len = sizeof(struct sockaddr_in);
    if (getsockname(server_socket, (struct sockaddr*)&my_addr, &len)) {
        return 4;
    }
    printf("%u\n", ntohs(my_addr.sin_port));

    if (listen(server_socket, REQUESTS_SIZE)) {
        return 4;
    }

    socklen_t client_addr_size = sizeof(struct sockaddr_in);
    while (1) {
        client_socket = accept(server_socket, (struct sockaddr*)&client_addr, &client_addr_size);
        if (client_socket < 0) {
            return 5;
        }

        data->socket_id = client_socket;
        handle_connection(data);   // ADD THREADS HERE

    }
    return 0;
}